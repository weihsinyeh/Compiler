%%
"+"             { print_token("ADD"); }
"-"             { print_token("SUB"); }
"*"             { print_token("MUL"); }
"\/"             { print_token("QUO"); }
"%"             { print_token("REM"); }
">"             { print_token("GTR"); }
"<"             { print_token("LSS"); }
">="            { print_token("GEQ"); }
"<="            { print_token("LEQ"); }
"=="            { print_token("EQL"); }
"!="            { print_token("NEQ"); }
"="             { print_token("ASSIGN"); }
"+="            { print_token("ADD_ASSIGN"); }
"-="            { print_token("SUB_ASSIGN"); }
"*="            { print_token("MUL_ASSIGN"); }
"/="            { print_token("DIV_ASSIGN"); }
"%="            { print_token("REM_ASSIGN"); }
"&"             { print_token("BAND"); }
"|"             { print_token("OR"); }
"~"             { print_token("BNOT"); }
">>"            { print_token("RSHIFT");}
"&&"            { print_token("LAND");}
"||"            { print_token("LOR"); }
"!"             { print_token("NOT"); }
"("             { print_token("LPAREN"); }
")"             { print_token("RPAREN"); }
"["             { print_token("LBRACK"); }
"]"             { print_token("RBRACK"); }
"{"             { print_token("LBRACE"); }
"}"	            { print_token("RBRACE"); }
";"             { print_token("SEMICOLON); }
","             { print_token("COMMA"); }
"\""             { print_token("QUOTA"); }
"\n"            { print_token("NEWLINE"); }
"\:"             { print_token("COLON"); }
"Int Number"    { print_token("INT_LIT");}
"Float Number"  { print_token("FLOAT_LIT");}
"String Literal" { print_token("STRING_LIT");}
"Identifier"    { print_token("IDENT"); }
"Comment"       { print_token("COMMENT / MUTI_LINE_COMMENTMUTI"); }
"->"            { print_token("ARROW"); }
"<<"            { print_token("LSHIFT"); }
"print"         { print_token("PRINT"); }
"println"       { print_token("PRINTLN"); }
"if"            { print_token("IF"); }
"else"          { print_token("ELSE"); }
"for"           { print_token("FOR"); }
"i32"           { print_token("INT"); }
"f32"           { print_token("FLOAT"); }
/* ".."            { print_token("DOTDOT"); } */
"bool"          { print_token("BOOL"); }
"true"          { print_token("TRUE");}
"false"         { print_token("FALSE");}
"let"	        { print_token("LET"); }
"mut"	        { print_token("MUT"); }
"fn"	        { print_token("FUNC"); }
"return"	    { print_token("RETURN"); }
"break"	        { print_tolen("BREAK"); }
"as"	        { print_token("AS"); }
"in"	        { print_token("IN"); }
"while"	        { print_token("WHILE"); }
"loop"	        { print_token("LOOP"); }
*/
<<EOF>>         { line_num++; yyterminate(); }
[ \t]+          {;}
.               {;}
%%